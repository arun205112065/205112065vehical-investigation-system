<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        /9j/4AAQSkZJRgABAQAAAQABAAD/2wBDAAkGBhMSEBQUEhIVFBQUEBAQFBQXFRUUFRQVFBAVFBQUFBQX
        HCYeFxkjGRQUHy8gIycpLCwsFR4xNTAqNSYrLCn/2wBDAQkKCg4MDhcPDxopJBwcLCwpLCwsKSwsKSwp
        KSkpKSwsKSksKSwpKSkpKSwpLCksLCwsKSksKSkpKSwsKSkpKSz/wAARCADhAOEDASIAAhEBAxEB/8QA
        HwAAAQUBAQEBAQEAAAAAAAAAAAECAwQFBgcICQoL/8QAtRAAAgEDAwIEAwUFBAQAAAF9AQIDAAQRBRIh
        MUEGE1FhByJxFDKBkaEII0KxwRVS0fAkM2JyggkKFhcYGRolJicoKSo0NTY3ODk6Q0RFRkdISUpTVFVW
        V1hZWmNkZWZnaGlqc3R1dnd4eXqDhIWGh4iJipKTlJWWl5iZmqKjpKWmp6ipqrKztLW2t7i5usLDxMXG
        x8jJytLT1NXW19jZ2uHi4+Tl5ufo6erx8vP09fb3+Pn6/8QAHwEAAwEBAQEBAQEBAQAAAAAAAAECAwQF
        BgcICQoL/8QAtREAAgECBAQDBAcFBAQAAQJ3AAECAxEEBSExBhJBUQdhcRMiMoEIFEKRobHBCSMzUvAV
        YnLRChYkNOEl8RcYGRomJygpKjU2Nzg5OkNERUZHSElKU1RVVldYWVpjZGVmZ2hpanN0dXZ3eHl6goOE
        hYaHiImKkpOUlZaXmJmaoqOkpaanqKmqsrO0tba3uLm6wsPExcbHyMnK0tPU1dbX2Nna4uPk5ebn6Onq
        8vP09fb3+Pn6/9oADAMBAAIRAxEAPwDtoPC0S/w1fi0pB0UVUn8TRL1YfnVCXxkn8OW+gJrw/dR6vLUZ
        0S26ipBgVyTeJJm+5E348Uge8k7BfzNPnXQPYvqzrjcKO4qF9UQdWFc4mg3D/flP0HFWovCK/wARZvqT
        T5pdieSC3Zel8TRD+IVVbxSD91WP0Bq3B4diXooq7Hp6jsKLSYr010MX+1p3+7GR9TThBcv1bFbywgU/
        Io5e7F7RLZGGmiOfvSMfxqxHoajrk/UmtFrhR3FV5dUQdWFO0UHPN7Cx6eo7Cp1hArKk8Qp2yfpzUZ1i
        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
</value>
  </data>
</root>